{"version":3,"sources":["functionBased/components/TodoItem.module.css","functionBased/components/Header.js","functionBased/components/InputTodo.js","functionBased/components/TodoItem.js","functionBased/components/TodosList.js","functionBased/components/TodoContainer.js","functionBased/pages/About.js","functionBased/pages/NotMatch.js","functionBased/components/Navbar.js","functionBased/pages/SinglePage.js","index.js"],"names":["module","exports","Header","style","padding","lineHeight","fontSize","fontWeight","marginBottom","color","textTransform","textAlign","InputTodo","props","useState","title","inputText","setInputText","onSubmit","e","preventDefault","trim","addTodoProps","alert","className","type","placeholder","value","name","onChange","prevState","target","TodoItem","editing","setEditing","todo","completed","id","viewMode","editMode","display","useEffect","console","log","styles","item","onDoubleClick","checkbox","checked","handleChangeProps","onClick","deleteTodoProps","fontStyle","opacity","textDecoration","textInput","setUpdate","onKeyDown","event","key","TodosList","todos","map","TodoContainer","temp","localStorage","getItem","JSON","parse","getInitialTodos","setTodos","stringify","setItem","newTodo","uuidv4","filter","updatedTitle","About","to","NotMatch","Navbar","navbarOpen","setNavbarOpen","width","height","path","text","link","SinglePage","slug","useParams","aboutContent","description","find","ReactDOM","render","StrictMode","basename","process","element","document","getElementById"],"mappings":"0GACAA,EAAOC,QAAU,CAAC,KAAO,uBAAuB,SAAW,2BAA2B,UAAY,8B,oJCenFC,EAdA,WAOb,OACE,wBAAQC,MANU,CAClBC,QAAS,SACTC,WAAY,SAIZ,SACE,oBAAIF,MAAO,CAAEG,SAAU,OAAQC,WAAY,MAAOC,aAAc,OAAQH,WAAY,MAAOI,MAAO,OAAQC,cAAe,YAAaC,UAAW,UAAjJ,sB,gBC2FSC,EAnGG,SAAAC,GAAS,MAEUC,mBAAS,CAC1CC,MAAM,KAHiB,mBAEjBC,EAFiB,KAENC,EAFM,KAgCzB,OACE,uBAAMC,SAfa,SAAAC,GACnBA,EAAEC,iBACEJ,EAAUD,MAAMM,QAClBR,EAAMS,aAAaN,EAAUD,OAC7BE,EAAa,CACXF,MAAM,MAKRQ,MAAM,sBAKsBC,UAAU,iBAAxC,UACE,uBACEC,KAAK,OACLD,UAAU,aACVE,YAAY,cACZC,MAAOX,EAAUD,MACjBa,KAAK,QACLC,SAhCW,SAAAV,GAEdF,GAAa,SAAAa,GACZ,OAAO,2BACFA,GADL,kBAEGX,EAAEY,OAAOH,KAAOT,EAAEY,OAAOJ,cA6C5B,wBAAQH,UAAU,eAAlB,SAAiC,cAAC,IAAD,U,iBCexBQ,EAxEE,SAACnB,GAAW,IAAD,EAEIC,mBAAS,CACrCmB,SAAQ,IAHgB,mBAEnBA,EAFmB,KAEVC,EAFU,OA8BSrB,EAAMsB,KAA/BC,EA9BgB,EA8BhBA,UAAWC,EA9BK,EA8BLA,GAAItB,EA9BC,EA8BDA,MAEnBuB,EAAW,GACXC,EAAW,GAcf,OAZIN,EAAQA,QACVK,EAASE,QAAU,OAEnBD,EAASC,QAAU,OAGrBC,qBAAU,WACR,OAAO,WACLC,QAAQC,IAAI,qBAEb,IAGD,qBAAInB,UAAWoB,IAAOC,KAAtB,UACE,sBAAKC,cAxCW,WACpBZ,EAAW,CACTD,SAAS,KAsC4B9B,MAAOmC,EAA1C,UACE,uBACEb,KAAK,WACLD,UAAWoB,IAAOG,SAClBC,QAASZ,EACTP,SAAU,kBAAMhB,EAAMoC,kBAAkBZ,MAE1C,wBAAQa,QAAS,kBAAMrC,EAAMsC,gBAAgBd,IAA7C,SAAkD,cAAC,IAAD,CAASlC,MAAO,CAAEM,MAAO,YAAaH,SAAU,YAClG,sBAAMH,MAAOiC,EAlCI,CACrBgB,UAAW,SACX3C,MAAO,UACP4C,QAAS,GACTC,eAAgB,gBA8B8B,KAA1C,SAAkDvC,OAEpD,uBACEU,KAAK,OACLtB,MAAOoC,EACPf,UAAWoB,IAAOW,UAClB5B,MAAOZ,EACPc,SAAU,SAACV,GAAMN,EAAM2C,UAAUrC,EAAEY,OAAOJ,MAAOU,IACjDoB,UAlDkB,SAACC,GACP,UAAdA,EAAMC,KACRzB,EAAW,CAAED,SAAS,WCCb2B,EAlBG,SAAC/C,GAEf,OACE,6BACGA,EAAMgD,MAAMC,KAAI,SAAA3B,GAAI,OACnB,cAAC,EAAD,CAEEA,KAAMA,EACNc,kBAAmBpC,EAAMoC,kBACzBE,gBAAiBtC,EAAMsC,gBACvBK,UAAW3C,EAAM2C,WAJZrB,EAAKE,U,QCiHP0B,EArHO,WAAM,IAAD,EAEDjD,mBAsExB,WAEE,IAAMkD,EAAOC,aAAaC,QAAQ,SAElC,OADmBC,KAAKC,MAAMJ,IACT,GAzErBK,IAHuB,mBAElBR,EAFkB,KAEZS,EAFY,KAqGvB,OAPF7B,qBAAU,WAER,IAAMuB,EAAOG,KAAKI,UAAUV,GAC5BI,aAAaO,QAAQ,QAASR,KAC7B,CAACH,IAIA,qBAAKrC,UAAU,YAAf,SACE,sBAAKA,UAAU,QAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAWF,aAxDC,SAAAP,GAClB,IAAM0D,EAAU,CACdpC,GAAIqC,cACJ3D,MAAOA,EACPqB,WAAW,GAEbkC,EAAS,GAAD,mBACHT,GADG,CACIY,QAkDN,cAAC,EAAD,CACEZ,MAAOA,EACPZ,kBAlFW,SAAAZ,GACnBiC,GAAS,SAAAxC,GAAS,OAChBA,EAAUgC,KAAI,SAAC3B,GACb,OAAIA,EAAKE,KAAOA,EACP,2BACFF,GADL,IACWC,WAAYD,EAAKC,YAGvBD,SA2EHgB,gBAtEM,SAAAd,GACdiC,EAAS,YAEFT,EAAMc,QAAO,SAAAxC,GACd,OAAOA,EAAKE,KAAOA,QAmEjBmB,UAjDQ,SAACoB,EAAcvC,GAC/BiC,EACET,EAAMC,KAAI,SAAC3B,GAIT,OAHGA,EAAKE,KAAOA,IACbF,EAAKpB,MAAQ6D,GAERzC,eClDA0C,EApBD,SAAChE,GAGb,OAFA6B,QAAQC,IAAI9B,GAGV,qBAAKW,UAAU,iBAAf,SACE,qBAAIA,UAAU,cAAd,UACE,6BAEE,cAAC,IAAD,CAAMsD,GAAE,mBAAR,yBAEF,6BACE,cAAC,IAAD,CAAMA,GAAE,sBAAR,4BAEF,6BACE,cAAC,IAAD,CAAMA,GAAE,oBAAR,gCCRKC,EAPE,WACf,OACE,8BACE,2D,gBCoDSC,EAnDA,WAAO,IAAD,EACiBlE,oBAAS,GAD1B,mBACZmE,EADY,KACAC,EADA,KAyBnB,OACE,sBAAK1D,UAAU,SAAf,UACE,wBAAQ0B,QAXS,WAEnBgC,GAAeD,IASb,SACGA,EACC,cAAC,IAAD,CAAS9E,MAAO,CAAEM,MAAO,OAAQ0E,MAAO,OAAQC,OAAQ,UAExD,cAAC,IAAD,CAAQjF,MAAO,CAAEM,MAAO,UAAW0E,MAAO,OAAQC,OAAQ,YAI9D,oBAAI5D,UAAS,kBAAayD,EAAa,YAAc,IAArD,SAhCU,CACZ,CACE5C,GAAI,EACJgD,KAAM,IACNC,KAAM,QAER,CACEjD,GAAI,EACJgD,KAAM,SACNC,KAAM,UAwBGxB,KAAI,SAACyB,GACV,OACE,6BAEE,cAAC,IAAD,CAAST,GAAIS,EAAKF,KAAMnC,QAAS,WAlB3CgC,GAAc,IAkBJ,SACGK,EAAKD,QAHDC,EAAKlD,aCJXmD,EArCI,WAEjB,IAqBQC,EAASC,cAATD,KACFE,EAtBY,CAChB,CACEF,KAAM,YACN1E,MAAO,gBACP6E,YACE,0TAEJ,CACEH,KAAM,eACN1E,MAAO,mBACP6E,YACE,qLAEJ,CACIH,KAAM,aACN1E,MAAO,OACP6E,YACE,kBAKuBC,MAAK,SAAChD,GAAD,OAAUA,EAAK4C,OAASA,KACpD1E,EAAuB4E,EAAvB5E,MAAO6E,EAAgBD,EAAhBC,YAIf,OACE,sBAAKpE,UAAU,gBAAf,UACA,6BAAKT,IACL,4BAAI6E,QCdRE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAAC,IAAD,CAAYC,SAAUC,yBAAtB,UACE,cAAC,EAAD,IAEA,eAAC,IAAD,WAEE,cAAC,IAAD,CAAOb,KAAK,IAAIc,QAAS,cAAC,EAAD,MAEzB,cAAC,IAAD,CAAOd,KAAK,SAASc,QAAS,cAAC,EAAD,MAE9B,cAAC,IAAD,CAAOd,KAAK,eAAec,QAAS,cAAC,EAAD,MAGpC,cAAC,IAAD,CAAOd,KAAK,IAAIc,QAAS,cAAC,EAAD,cAK/BC,SAASC,eAAe,W","file":"static/js/main.49221bb0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TodoItem_item__2P6SA\",\"checkbox\":\"TodoItem_checkbox__rSYv2\",\"textInput\":\"TodoItem_textInput__3hLvE\"};","import React from \"react\"\r\n\r\nconst Header = () => {\r\n\r\n  const headerStyle = {\r\n    padding: \"20px 0\",\r\n    lineHeight: \"1.5em\",\r\n  }\r\n  \r\n  return (\r\n    <header style={headerStyle}>\r\n      <h1 style={{ fontSize: \"6rem\", fontWeight: \"600\", marginBottom: \"2rem\", lineHeight: \"1em\", color: \"#eee\", textTransform: \"lowercase\", textAlign: \"center\" }}>todos</h1>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header","import React, { useState } from \"react\"\r\nimport { FaPlusCircle } from \"react-icons/fa\"\r\n\r\nconst InputTodo = props => {\r\n // const [title, setTitle] = useState(\"\") // key title et sa fonction, initiÃ© avec une valeur vide\r\n   const [inputText, setInputText] = useState({\r\n    title:\"\",\r\n    //fName: \"\",\r\n   // lastName: \"\",\r\n  }) \r\n\r\n  const onChange = e => {\r\n   // setTitle(e.target.value)\r\n     setInputText(prevState=>{\r\n      return {\r\n        ...prevState, \r\n        [e.target.name]: e.target.value,\r\n      }\r\n    }) \r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault()\r\n    if (inputText.title.trim()) {\r\n      props.addTodoProps(inputText.title)\r\n      setInputText({\r\n        title:\"\",\r\n        //fName: \"\",\r\n        // lastName: \"\",\r\n      })\r\n    } else {\r\n      alert(\"Please write item\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"form-container\">\r\n      <input\r\n        type=\"text\"\r\n        className=\"input-text\"\r\n        placeholder=\"Add todo...\"\r\n        value={inputText.title}\r\n        name=\"title\"\r\n        onChange={onChange}\r\n      />\r\n      {/* <input\r\n          type=\"text\"\r\n          className=\"input-text\"\r\n          placeholder=\"Add first name\"\r\n          value={inputText.fName}\r\n          name=\"fName\"\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          className=\"input-text\"\r\n          placeholder=\"Add last name\"\r\n          value={inputText.lastName}\r\n          name=\"lastName\"\r\n          onChange={onChange}\r\n        /> */}\r\n      <button className=\"input-submit\"><FaPlusCircle /></button>\r\n    </form>\r\n  )\r\n}\r\n\r\n\r\n\r\n// class InputTodo extends Component {\r\n//   state = {\r\n//     title: \"\",\r\n//   }\r\n//   onChange = e => {\r\n//     this.setState({\r\n//       [e.target.name]: e.target.value,    \r\n//     })\r\n//   }\r\n\r\n//   handleSubmit = e => {\r\n//     e.preventDefault();\r\n//     this.props.addTodoProps(this.state.title);\r\n//     this.setState({    \r\n//       title: \"\"  \r\n//     });\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <form onSubmit={this.handleSubmit} className=\"form-container\">\r\n//         <input\r\n//           type=\"text\"\r\n//           className=\"input-text\"\r\n//           placeholder=\"Add todo...\"\r\n//           value={this.state.title}\r\n//           name=\"title\"          \r\n//           onChange={this.onChange}\r\n//         />\r\n//         <input type=\"submit\" className=\"input-submit\" value=\"Submit\" />\r\n//       </form>\r\n//     )\r\n//   }\r\n// }\r\nexport default InputTodo","import React, { useState, useEffect} from \"react\"\r\nimport styles from \"./TodoItem.module.css\"\r\nimport { FaTrash } from \"react-icons/fa\"\r\n\r\nconst TodoItem = (props) => {\r\n\r\n  const [editing, setEditing] = useState({\r\n    editing:false,\r\n    //fName: \"\",\r\n   // lastName: \"\",\r\n  }) \r\n  \r\n\r\n  const handleEditing = () => {\r\n    setEditing({\r\n      editing: true\r\n    })\r\n  } \r\n\r\n  const handleUpdatedDone = (event) => {\r\n    if (event.key === \"Enter\" ) {\r\n      setEditing({ editing: false });\r\n    }\r\n  }\r\n    \r\n  \r\n\r\n    const completedStyle = {\r\n      fontStyle: \"italic\",\r\n      color: \"#595959\",\r\n      opacity: 0.4,\r\n      textDecoration: \"line-through\",\r\n    }\r\n\r\n    const { completed, id, title } = props.todo\r\n    \r\n    let viewMode = {};\r\n    let editMode = {};\r\n\r\n    if (editing.editing) {\r\n      viewMode.display = 'none';\r\n    } else {\r\n      editMode.display = 'none';\r\n    }\r\n\r\n    useEffect(() => {\r\n      return () => {\r\n        console.log(\"Cleaning up...\")\r\n      }\r\n    }, [])\r\n\r\n    return (\r\n      <li className={styles.item}>\r\n        <div onDoubleClick={handleEditing} style={viewMode}>\r\n          <input \r\n            type=\"checkbox\" \r\n            className={styles.checkbox}\r\n            checked={completed}  \r\n            onChange={() => props.handleChangeProps(id)}\r\n          />\r\n          <button onClick={() => props.deleteTodoProps(id)}><FaTrash style={{ color: \"orangered\", fontSize: \"16px\" }} /></button>\r\n          <span style={completed ? completedStyle : null} >{title}</span>\r\n        </div>\r\n        <input \r\n          type=\"text\" \r\n          style={editMode} \r\n          className={styles.textInput} \r\n          value={title} \r\n          onChange={(e)=> {props.setUpdate(e.target.value, id)}}\r\n          onKeyDown={handleUpdatedDone}\r\n        />\r\n      </li>\r\n    )\r\n  }\r\n\r\n\r\nexport default TodoItem","import React from \"react\"\r\nimport TodoItem from \"./TodoItem\";\r\n\r\n\r\nconst TodosList = (props) => {\r\n  \r\n    return (\r\n      <ul>\r\n        {props.todos.map(todo => (\r\n          <TodoItem\r\n            key={todo.id}\r\n            todo={todo}\r\n            handleChangeProps={props.handleChangeProps}\r\n            deleteTodoProps={props.deleteTodoProps}\r\n            setUpdate={props.setUpdate}\r\n          />\r\n        ))}\r\n      </ul>\r\n    )\r\n  }\r\n\r\n\r\nexport default TodosList","import React, { useState, useEffect } from \"react\"\r\nimport Header from \"./Header\"\r\nimport InputTodo from \"./InputTodo\"\r\nimport TodosList from \"./TodosList\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst TodoContainer = ()=> {\r\n\r\n  const [todos,setTodos]= useState(\r\n    getInitialTodos()\r\n    \r\n  )\r\n  // state = {\r\n  //   todos: [\r\n  //     {\r\n  //       id: uuidv4(),\r\n  //       title: \"Setup development environment\",\r\n  //       completed: true\r\n  //     },\r\n  //     {\r\n  //       id: uuidv4(),\r\n  //       title: \"Develop website and add content\",\r\n  //       completed: false\r\n  //     },\r\n  //     {\r\n  //       id: uuidv4(),\r\n  //       title: \"Deploy to live server\",\r\n  //       completed: false\r\n  //     }\r\n  //   ]\r\n  // };\r\n\r\n  const handleChange = id => {\r\n    setTodos(prevState =>     \r\n      prevState.map((todo) => {     \r\n        if (todo.id === id) {  \r\n          return {\r\n            ...todo, completed: !todo.completed\r\n          }      \r\n        }      \r\n        return todo;    \r\n      })  \r\n    );    \r\n  };\r\n\r\n  const delTodo = id => {\r\n    setTodos(    \r\n       [      \r\n        ...todos.filter(todo => {        \r\n          return todo.id !== id;      \r\n        })    \r\n      ]  \r\n    );\r\n  };\r\n\r\n  const addTodoItem = title => {\r\n    const newTodo = {    \r\n      id: uuidv4(),    \r\n      title: title,    \r\n      completed: false  \r\n    };  \r\n    setTodos(    \r\n     [...todos, newTodo]  \r\n    );\r\n  };\r\n\r\n  \r\n  const setUpdate = (updatedTitle, id) => {\r\n    setTodos(\r\n      todos.map((todo) => {\r\n        if(todo.id === id) {\r\n          todo.title = updatedTitle\r\n        }\r\n        return todo\r\n      })\r\n    )\r\n  }\r\n\r\n  function getInitialTodos() {\r\n    // getting stored items\r\n    const temp = localStorage.getItem(\"todos\")\r\n    const savedTodos = JSON.parse(temp)\r\n    return savedTodos || []\r\n  }\r\n\r\n  //Pour rÃ©cupÃ©rer les donnÃ©es avec le GET\r\n  // useEffect(() => {\r\n  //   console.log(\"test run\")\r\n  \r\n  //   // getting stored items => rÃ©cupÃ¨re le donnÃ©es\r\n  //   const temp = localStorage.getItem(\"todos\")\r\n  //   const loadedTodos = JSON.parse(temp)\r\n  \r\n  //   if (loadedTodos) { //Si il y a des donnÃ©es, tu es affiches\r\n  //     setTodos(loadedTodos)\r\n  //   }\r\n  // }, [])\r\n\r\n  \r\n  //Pour enregistrer les donnÃ©es avec le SET\r\n  useEffect(() => {\r\n    // storing todos items\r\n    const temp = JSON.stringify(todos)\r\n    localStorage.setItem(\"todos\", temp)\r\n  }, [todos])\r\n\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"inner\">\r\n          <Header />\r\n          <InputTodo addTodoProps={addTodoItem} />\r\n          <TodosList \r\n            todos={todos} \r\n            handleChangeProps={handleChange} \r\n            deleteTodoProps={delTodo}\r\n            setUpdate ={setUpdate} \r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  \r\n}\r\nexport default TodoContainer","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst About = (props) => {\r\n  console.log(props);\r\n\r\n  return (\r\n    <div className=\"about__content\">\r\n      <ul className=\"about__list\">\r\n        <li>\r\n            {/* /about/about-app => chemin qui apparaitra dans l'url / about-app => Slug */}\r\n          <Link to={`/about/about-app`}>About App</Link>\r\n        </li>\r\n        <li>\r\n          <Link to={`/about/about-author`}>About Author</Link>\r\n        </li>\r\n        <li>\r\n          <Link to={`/about/about-test`}>About test</Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nexport default About;\r\n","import React from \"react\"\r\n\r\nconst NotMatch = () => {\r\n  return (\r\n    <div>\r\n      <h3>No match for this page</h3>\r\n    </div>\r\n  )\r\n}\r\nexport default NotMatch","import React, { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n//Importation des icon\r\nimport { MdClose } from \"react-icons/md\";\r\nimport { FiMenu } from \"react-icons/fi\";\r\n\r\nconst Navbar = () => {\r\n  const [navbarOpen, setNavbarOpen] = useState(false);\r\n\r\n  const links = [\r\n    {\r\n      id: 1,\r\n      path: \"/\",\r\n      text: \"Home\",\r\n    },\r\n    {\r\n      id: 2,\r\n      path: \"/about\",\r\n      text: \"About\",\r\n    },\r\n  ];\r\n\r\n  const handleToggle = () => {\r\n    // setNavbarOpen((prev) => !prev);\r\n    setNavbarOpen(!navbarOpen); // Mise Ã  jour automatique de l'Ã©tat le navbarOpen (ligne 5) selon true/false => (!navbarOpen) inverse l'Ã©tat prÃ©dÃ©fini\r\n  };\r\n\r\n  const closeMenu = () => {\r\n    setNavbarOpen(false);\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navBar\">\r\n      <button onClick={handleToggle}>\r\n        {navbarOpen ? (\r\n          <MdClose style={{ color: \"#fff\", width: \"40px\", height: \"40px\" }} />\r\n        ) : (\r\n          <FiMenu style={{ color: \"#7b7b7b\", width: \"40px\", height: \"40px\" }} />\r\n        )}\r\n      </button>\r\n      {/*Utilisation de la class \"MenuNav\" en permanence  / Quand NavBarOpen == true, la class \"showMenu\" est ajoutÃ©e */}\r\n      <ul className={`menuNav ${navbarOpen ? \" showMenu\" : \"\"}`}>\r\n        {links.map((link) => {\r\n          return (\r\n            <li key={link.id}>\r\n              {/* <Link to={/}>{Home}</Link>  - NavLink indique nativement class=active */}\r\n              <NavLink to={link.path} onClick={() => closeMenu()}>\r\n                {link.text}\r\n              </NavLink>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst SinglePage = () => {\r\n    // Remplace la BDD\r\n  const aboutData = [\r\n    {\r\n      slug: \"about-app\",\r\n      title: \"About the App\",\r\n      description:\r\n        \"In this app, you can add, delete, submit and edit items. To edit items, simply double click on it. Once you are done, press the enter key to resubmit. This app will persist your data in the browser local storage. So whether you reload, close your app or reopened it, you still have access to your to-dos items.\",\r\n    },\r\n    {\r\n      slug: \"about-author\",\r\n      title: \"About the Author\",\r\n      description:\r\n        \"This app was developed by Ibas Majid, a self-taught web developer and a technical writer. He is opened to freelance Gig. So go ahead and connect with ibas on Twitter @ibaslogic.\",\r\n    },\r\n    {\r\n        slug: \"about-test\",\r\n        title: \"Test\",\r\n        description:\r\n          \"Texte du test\",\r\n      },\r\n  ];\r\n\r\n  const { slug } = useParams(); // La fonction useParams() compile les donnÃ©es par slug pour les reconnaÃ®tre\r\n  const aboutContent = aboutData.find((item) => item.slug === slug); // aboutData.find((item) => cherche s'il y a une correspondance entre le slug (lien) cliquÃ©, et un slug existant. Si oui, elle enregistre le slug correspondant dans \"const aboutContent\"\r\n  const { title, description } = aboutContent; // const { title, description } => va chercher les infos depuis \"aboutContent\" et les sÃ©pare pour pouvoir faire l'affichage HTML sÃ©parÃ©ment \"   {>title}{description}\"\r\n\r\n  //console.log(useParams());\r\n\r\n  return (\r\n    <div className=\"main__content\">\r\n    <h1>{title}</h1>\r\n    <p>{description}</p>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default SinglePage;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n//stylesheet\r\nimport \"./functionBased/App.css\";\r\n\r\n//Router\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\n//Routes remplace switch pour la V6\r\nimport { Route, Routes } from \"react-router-dom\";\r\n\r\n//component file\r\nimport TodoContainer from \"./functionBased/components/TodoContainer\";\r\n\r\n//Importation des pages\r\nimport About from \"./functionBased/pages/About\";\r\nimport NotMatch from \"./functionBased/pages/NotMatch\";\r\nimport Navbar from \"./functionBased/components/Navbar\"\r\nimport SinglePage from  \"./functionBased/pages/SinglePage\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter basename={process.env.PUBLIC_URL} >\r\n      <Navbar />\r\n\r\n      <Routes>\r\n        {/* Demande Ã  charger la page TodoContainer aprÃ¨s avoir rencontrer le \"/\" dans l'URL */}\r\n        <Route path=\"/\" element={<TodoContainer />} />\r\n        {/* Pour aller chercher la page About */}\r\n        <Route path=\"/about\" element={<About />} />\r\n        {/* Le slug correspond a ce qui se situe aprÃ¨s about/:  /Technique utilisÃ©e pour faire un site \"onePage\" et utiliser des slugs diffÃ©rents plutÃ´t que des pages */}\r\n        <Route path=\"/about/:slug\" element={<SinglePage/>}/>\r\n      \r\n        {/* On remplace le \"/\" par \"*\" pour rediriger quand on rencontre un lien qui n'existe pas */}\r\n        <Route path=\"*\" element={<NotMatch />} />\r\n        {/* <TodoContainer /> */}\r\n      </Routes>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}